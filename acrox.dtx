% \iffalse meta-comment
% vim: textwidth=75
%<*internal>
\iffalse
%</internal>
%<*readme>
|
-------:| -----------------------------------------------------------------
  acrox:| Provides additional endings for the `acro` package
 Author:| Daniel Bosk
 E-mail:| dbosk@kth.se
License:| Released under the LaTeX Project Public License v1.3c or later
    See:| http://www.latex-project.org/lppl.txt


Short description:
Adds additional endings and forms for the `acro` package, e.g. to use an 
acronym as an adjective or adverb.
%</readme>
%<*internal>
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
%</internal>
%<*install>
\input docstrip.tex
\keepsilent
\askforoverwritefalse
\preamble
-------:| -----------------------------------------------------------------
  acrox:| A new LaTeX package
 Author:| Daniel Bosk
 E-mail:| dbosk@kth.se
License:| Released under the LaTeX Project Public License v1.3c or later
    See:| http://www.latex-project.org/lppl.txt

\endpreamble
\postamble

Copyright (C) 2019 by Daniel Bosk <dbosk@kth.se>

This work may be distributed and/or modified under the
conditions of the LaTeX Project Public License (LPPL), either
version 1.3c of this license or (at your option) any later
version.  The latest version of this license is in the file:

http://www.latex-project.org/lppl.txt

This work is "maintained" (as per LPPL maintenance status) by
Daniel Bosk.

This work consists of the file acrox.dtx and a Makefile.
Running "make" generates the derived files README, acrox.pdf and acrox.sty.
Running "make inst" installs the files in the user's TeX tree.
Running "make install" installs the files in the local TeX tree.

\endpostamble

\usedir{tex/latex/acrox}
\generate{
  \file{\jobname.sty}{\from{\jobname.dtx}{package}}
}
%</install>
%<install>\endbatchfile
%<*internal>
\usedir{source/latex/acrox}
\generate{
  \file{\jobname.ins}{\from{\jobname.dtx}{install}}
}
\nopreamble\nopostamble
\usedir{doc/latex/acrox}
\generate{
  \file{README.txt}{\from{\jobname.dtx}{readme}}
}
\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi
%</internal>
% \fi
%
% \iffalse
%<*driver>
\ProvidesFile{acrox.dtx}
%</driver>
%<package>\NeedsTeXFormat{LaTeX2e}[1999/12/01]
%<package>\ProvidesPackage{acrox}
%<*package>
    [2019/08/27 v1.00 acrox, additional endings for acro]
%</package>
%<*driver>
\documentclass{ltxdoc}
\usepackage[utf8]{inputenc}
\usepackage[numbered]{hypdoc}
\usepackage{csquotes}
\usepackage{dtxdescribe}
\usepackage{\jobname}
\usepackage{bibsp}
\usepackage{biblatex}
\addbibresource{crypto.bib}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
% \GetFileInfo{\jobname.dtx}
% \DoNotIndex{\newcommand,\newenvironment}
%
%\title{\textsf{acrox} --- additional endings for \textsf{acro}\thanks{%
%   This file describes version \fileversion, last revised \filedate.
%  }
%}
%\author{Daniel Bosk\thanks{E-mail: dbosk@kth.se}}
%\date{Released \filedate}
%
%\maketitle
%
%\changes{v1.00}{2019/08/27}{First public release}
%
% \begin{abstract}
% This package provides a set of additional endings for the acro package.
% \end{abstract}
%
% \section{Usage}
%
% Load this package instead of the |acro| package.
% Then this package will load |acro| and define the additional endings 
% and their commands.
% The |acro| package requires that all endings are defined before any 
% acronyms are defined, hence this required use.
%
% \DescribeMacro{\DeclareAcronym}\marg{key-val}
% We introduce three new endings: possessive/genitive form, adjective and 
% adverb forms.
% This adds some possible values to fill when defining an acronym.
% We will use the term \enquote{universal composability} (the noun form) as 
% an example.
% \begin{dtxexample}*{Using an acronym as adverb, adjective and noun.}
% \Iacadv{UC} secure \acadj{UC} framework based on \ac{UC}.
% \end{dtxexample}
%
% \DescribeKey{long-adjective-form}
% \DescribeKey{long-adverb-form}
% \DescribeKey{long-possessive-form}
% Normally, a \enquote{ly} suffix is added for the long form for both 
% adjective and adverb.
% (Nothing is added for the short form.)
% However, for many acronyms, one must use the \enquote{-form} key provided 
% by |acro|.
% For the \ac{UC} acronym, we used
% |short = UC|, |long = universal composability|,
% |long-adjective-form = universally composable|,
% |long-adverb-form = universally composably|.
%
%\StopEventually{^^A
%  \PrintChanges
%  \PrintIndex
%}
%
% \section{Implementation}
%
% The first thing to do is to load the |acro| package.
% We don't provide any additional options, but want to pass all options the 
% real |acro| package.
% and turn on the LaTeX 
% 3 syntax.
%    \begin{macrocode}
%<*package>
\RequirePackage{acro}
\DeclareOption*{%
  \PassOptionsToClass{\CurrentOption}{acro}%
}
\ProcessOptions\relax
%    \end{macrocode}
% The |acro| package uses the LaTeX 3 syntax, so we must turn that on.
%    \begin{macrocode}
\ExplSyntaxOn
%    \end{macrocode}
%
% \subsection{Possessive (genitive) form}
%
% \begin{macro}{possessive-singular}
% \begin{macro}{possessive-plural}
% \begin{macro}{\acg}
% \begin{macro}{\acgp}
% \begin{macro}{\Acg}
% \begin{macro}{\Acgp}
% The first form that we provide is the possessive (or genitive) form:
%    \begin{macrocode}
\ProvideAcroEnding{possessive-singular}{'s}{'s}
\ProvideAcroEnding{possessive-plural}{s'}{s'}
\ProvideAcroCommand{\acg}{%
  \acro_possessive_singular:
  \acro_use:n {#1}
}
\ProvideAcroCommand{\acgp}{%
  \acro_possessive_plural:
  \acro_use:n {#1}
}
\ProvideAcroCommand{\Acg}{%
  \acro_possessive_singular:
  \acro_first_upper:
  \acro_use:n {#1}
}
\ProvideAcroCommand{\Acgp}{%
  \acro_possessive_plural:
  \acro_first_upper:
  \acro_use:n {#1}
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \subsection{Adjective and adverb forms}
%
% \begin{environment}{adverb}
% \begin{macro}{\acadv}
% \begin{macro}{\iacadv}
% \begin{macro}{\Acadv}
% \begin{macro}{\Iacadv}
% Next, we also want to have an adverb form:
%    \begin{macrocode}
\ProvideAcroEnding{adverb}{}{ly}
\ProvideAcroCommand{\acadv}{%
  \acro_adverb:
  \acro_use:n {#1}
}
\ProvideAcroCommand{\iacadv}{%
  \acro_adverb:
  \acro_indefinite:
  \acro_use:n {#1}
}
\ProvideAcroCommand{\Acadv}{%
  \acro_adverb:
  \acro_first_upper:
  \acro_use:n {#1}
}
\ProvideAcroCommand{\Iacadv}{%
  \acro_adverb:
  \acro_first_upper:
  \acro_indefinite:
  \acro_use:n {#1}
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{environment}
%
% \begin{environment}{adjective}
% \begin{macro}{\acadj}
% \begin{macro}{\iacadj}
% \begin{macro}{\Acadj}
% \begin{macro}{\Iacadj}
% The same for the adjective form:
%    \begin{macrocode}
\ProvideAcroEnding{adjective}{}{ly}
\ProvideAcroCommand{\acadj}{%
  \acro_adjective:
  \acro_use:n {#1}
}
\ProvideAcroCommand{\iacadj}{%
  \acro_adjective:
  \acro_indefinite:
  \acro_use:n {#1}
}
\ProvideAcroCommand{\Acadj}{%
  \acro_adjective:
  \acro_first_upper:
  \acro_use:n {#1}
}
\ProvideAcroCommand{\Iacadj}{%
  \acro_adjective:
  \acro_first_upper:
  \acro_indefinite:
  \acro_use:n {#1}
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{environment}
%
% And that's the end of the package implementation.
%    \begin{macrocode}
\ExplSyntaxOff
\endinput
%</package>
%    \end{macrocode}
%\Finale
