% \iffalse meta-comment
% vim: textwidth=75
%<*internal>
\iffalse
%</internal>
%<*readme>
|
-------:| -----------------------------------------------------------------
  acrox:| Provides additional styles for the `acro` package
 Author:| Daniel Bosk
 E-mail:| daniel@bosk.se
License:| Released under the LaTeX Project Public License v1.3c or later
    See:| http://www.latex-project.org/lppl.txt


Short description:
Adds additional styles and forms for the `acro` package, e.g. to use an 
acronym as an adjective or adverb.
%</readme>
%<*internal>
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
%</internal>
%<*install>
\input docstrip.tex
\keepsilent
\askforoverwritefalse
\preamble
-------:| -----------------------------------------------------------------
  acrox:| Provides additional styles for the `acro` package
 Author:| Daniel Bosk
 E-mail:| daniel@bosk.se
License:| Released under the LaTeX Project Public License v1.3c or later
    See:| http://www.latex-project.org/lppl.txt

\endpreamble
\postamble

Copyright (C) 2019--2020 by Daniel Bosk <daniel@bosk.se>

This work may be distributed and/or modified under the
conditions of the LaTeX Project Public License (LPPL), either
version 1.3c of this license or (at your option) any later
version.  The latest version of this license is in the file:

http://www.latex-project.org/lppl.txt

This work is "maintained" (as per LPPL maintenance status) by
Daniel Bosk.

This work consists of the file acrox.dtx and a Makefile.
Running "make" generates the derived files README, acrox.pdf and acrox.sty.
Running "make inst" installs the files in the user's TeX tree.
Running "make install" installs the files in the local TeX tree.

\endpostamble

\usedir{tex/latex/acrox}
\generate{
  \file{acro.style.adx.code.tex}{\from{\jobname.dtx}{adx}}
  \file{acro.style.possessive.code.tex}{\from{\jobname.dtx}{possessive}}
}
%</install>
%<install>\endbatchfile
%<*internal>
\usedir{source/latex/acrox}
\generate{
  \file{\jobname.ins}{\from{\jobname.dtx}{install}}
}
\nopreamble\nopostamble
\usedir{doc/latex/acrox}
\generate{
  \file{README.txt}{\from{\jobname.dtx}{readme}}
}
\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi
%</internal>
% \fi
%
% \iffalse
%<*driver>
\ProvidesFile{acrox.dtx}
\documentclass{ltxdoc}
\usepackage[utf8]{inputenc}
\usepackage[numbered]{hypdoc}
\usepackage{csquotes}
\usepackage{dtxdescribe}
\usepackage{acro}
\acsetup{load-style=adx}
\acsetup{load-style=possessive}
\DeclareAcronym{MP}{
  short = MP,
  long = Member of Parliament,
}
\usepackage{bibsp}
\usepackage{biblatex}
\addbibresource{crypto.bib}
\usepackage{bibedu}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
% \GetFileInfo{\jobname.dtx}
% \DoNotIndex{\newcommand,\newenvironment}
%
%\title{\textsf{acrox} --- additional styles for \textsf{acro}\thanks{%
%   This file describes version \fileversion, last revised \filedate.
%  }
%}
%\author{Daniel Bosk\thanks{E-mail: daniel@bosk.se}}
%\date{Released \filedate}
%
%\maketitle
%
%\changes{v1.00}{2019/08/27}{First public release}
%\changes{v1.01}{2020/03/24}{Adds long versions with adj/adv forms}
%\changes{v2.00}{2020/11/14}{Changes to acro's style format}
%
% \begin{abstract}
% This package provides a set of additional styles for the acro package.
% \end{abstract}
%
% \section{Usage}
%
% This package provides a style file which extends the endings for the 
% |acro| package.
%
% The |acro| package requires that all endings are defined before any 
% acronyms are defined, hence this style file must be loaded directly after 
% loading the |acro| package by |\acsetup{load-style=\marg{style}}|.
%
% This package provides two styles: |possessive| and |adx|.
% |possessive| provides possessive endings, similar to the example in the 
% |acro| documentation.
% |adx| provides adjective and adverb endings.
%
% \subsection{Adjective and adverb forms}
%
% We introduce two new endings: adjective and adverb forms.
% This adds some possible values to fill when defining an acronym.
% We will use the term \enquote{universal composability} (the noun form) as 
% an example.
%
% \begin{dtxexample}*{Using an acronym as adverb, adjective and noun.}
% \Iacadv{UC} secure \acadj{UC} framework based on \ac{UC}.\par
% \Iacadv{UC} secure \acresetall\acadj{UC} framework based on \ac{UC}.\par
% \Iacadv{UC} secure \acadj{UC} framework based on \acresetall\ac{UC}.
% \end{dtxexample}
%
% \DescribeMacro{\DeclareAcronym}\marg{key-val}
% \DescribeKey{long-adjective-form}
% \DescribeKey{long-adverb-form}
% Normally, a \enquote{ly} suffix is added for the long form for both 
% adjective and adverb.
% (Nothing is added for the short form.)
% However, for many acronyms, one must use the \enquote{-form} key provided 
% by |acro|.
% For the \ac{UC} acronym, we used
% \begin{itemize}
% \item |short = UC|,
% \item |long = universal composability|,
% \item |long-adjective-form = universally composable|,
% \item |long-adverb-form = universally composably|.
% \end{itemize}
%
% \subsection{Possessive form}
%
% This is similar to that in the |acro| manual, however, it's extended a 
% bit.
% Since \enquote{p} is already used for plural, we will use \enquote{g} for 
% genitive form.
%
% \begin{dtxexample}*{Using possessive case.}
% \Iacg{MP} salary is the \acgp{MP} business.
% \end{dtxexample}
%
% \DescribeMacro{\DeclareAcronym}\marg{key-val}
% \DescribeKey{short-possessiveS}
% \DescribeKey{short-possessiveP}
% \DescribeKey{short-possessiveS-form}
% \DescribeKey{short-possessiveP-form}
% \DescribeKey{long-possessiveS}
% \DescribeKey{long-possessiveP}
% \DescribeKey{long-possessiveS-form}
% \DescribeKey{long-possessiveP-form}
% Normally we just add \enquote{'s} at the end of singular, \enquote{'} at 
% the end of plural.
% However, sometimes we must override this.
% We can override the defaults by setting the ending for short forms 
% (|short-possessive|), the ending for long forms (|long-possessive|).
% But we can set the final form directly through the |*-form| keys.
%
%\StopEventually{^^A
%  \PrintChanges
%  \PrintIndex
%}
%
% \section{Implementation}
%
% We provide separate style files for the different endings.
%
% \subsection{Possessive form}
%
% The first thing to do is to declare which style is loaded.
%    \begin{macrocode}
%<*possessive>
\AcroStyle{possessive}
%    \end{macrocode}
%
% \begin{macro}{possessiveS}
% \begin{macro}{possessiveP}
% \begin{macro}{\acg}
% \begin{macro}{\acgp}
% \begin{macro}{\Acg}
% \begin{macro}{\Acgp}
% The first form that we provide is the possessive (or genitive) form.
% This is the exact implementation as given as an example in the |acro| 
% manual (v2.8).
%    \begin{macrocode}
\DeclareAcroEnding{possessiveS}{'s}{'s}
\DeclareAcroEnding{possessiveP}{s'}{s'}
\ProvideAcroCommand{\acg}{m}{%
  \acropossessiveS
  \UseAcroTemplate{first}{#1}%
}
\ProvideAcroCommand{\acgp}{m}{%
  \acropossessiveP
  \UseAcroTemplate{first}{#1}%
}
\ProvideAcroCommand{\iacg}{m}{%
  \acropossessiveS
  \acroindefinite
  \UseAcroTemplate{first}{#1}%
}
\ProvideAcroCommand{\iacgp}{m}{%
  \acropossessiveP
  \acroindefinite
  \UseAcroTemplate{first}{#1}%
}
\ProvideAcroCommand{\Acg}{m}{%
  \acropossessiveS
  \acroupper
  \UseAcroTemplate{first}{#1}%
}
\ProvideAcroCommand{\Acgp}{m}{%
  \acropossessiveP
  \acroupper
  \UseAcroTemplate{first}{#1}%
}
\ProvideAcroCommand{\Iacg}{m}{%
  \acropossessiveS
  \acroindefinite
  \acroupper
  \UseAcroTemplate{first}{#1}%
}
\ProvideAcroCommand{\Iacgp}{m}{%
  \acropossessiveP
  \acroindefinite
  \acroupper
  \UseAcroTemplate{first}{#1}%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% And that's the end of the |possessive| style implementation.
%    \begin{macrocode}
%</possessive>
%    \end{macrocode}
%
%
% \subsection{Adjective and adverb forms}
%
% The first thing to do is to declare which style is loaded.
%    \begin{macrocode}
%<*adx>
\AcroStyle{adx}
%    \end{macrocode}
%
% \begin{macro}{\acadj}
% \begin{macro}{\iacadj}
% \begin{macro}{\Acadj}
% \begin{macro}{\Iacadj}
% \begin{macro}{\acladj}
% \begin{macro}{\iacladj}
% \begin{macro}{\Acladj}
% \begin{macro}{\Iacladj}
% We first provide an adjective form.
%    \begin{macrocode}
\DeclareAcroEnding{adjective}{}{ly}
\ProvideAcroCommand{\acadj}{m}{%
  \acroadjective
  \UseAcroTemplate{first}{#1}%
}
\ProvideAcroCommand{\iacadj}{m}{%
  \acroadjective
  \acroindefinite
  \UseAcroTemplate{first}{#1}%
}
\ProvideAcroCommand{\Acadj}{m}{%
  \acroadjective
  \acroupper
  \UseAcroTemplate{first}{#1}%
}
\ProvideAcroCommand{\Iacadj}{m}{%
  \acroadjective
  \acroupper
  \acroindefinite
  \UseAcroTemplate{first}{#1}%
}
\ProvideAcroCommand{\acladj}{m}{%
  \acroadjective
  \UseAcroTemplate{long}{#1}%
}
\ProvideAcroCommand{\iacladj}{m}{%
  \acroadjective
  \acroindefinite
  \UseAcroTemplate{long}{#1}%
}
\ProvideAcroCommand{\Acladj}{m}{%
  \acroadjective
  \acroupper
  \UseAcroTemplate{long}{#1}%
}
\ProvideAcroCommand{\Iacladj}{m}{%
  \acroadjective
  \acroupper
  \acroindefinite
  \UseAcroTemplate{long}{#1}%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\acadv}
% \begin{macro}{\iacadv}
% \begin{macro}{\Acadv}
% \begin{macro}{\Iacadv}
% \begin{macro}{\acladv}
% \begin{macro}{\iacladv}
% \begin{macro}{\Acladv}
% \begin{macro}{\Iacladv}
% We also want to have an adverb form.
% The code is similar.
%    \begin{macrocode}
\DeclareAcroEnding{adverb}{}{ly}
\ProvideAcroCommand{\acadv}{m}{%
  \acroadverb
  \UseAcroTemplate{first}{#1}%
}
\ProvideAcroCommand{\iacadv}{m}{%
  \acroadverb
  \acroindefinite
  \UseAcroTemplate{first}{#1}%
}
\ProvideAcroCommand{\Acadv}{m}{%
  \acroadverb
  \acroupper
  \UseAcroTemplate{first}{#1}%
}
\ProvideAcroCommand{\Iacadv}{m}{%
  \acroadverb
  \acroupper
  \acroindefinite
  \UseAcroTemplate{first}{#1}%
}
\ProvideAcroCommand{\acladv}{m}{%
  \acroadverb
  \UseAcroTemplate{long}{#1}
}
\ProvideAcroCommand{\iacladv}{m}{%
  \acroadverb
  \acroindefinite
  \UseAcroTemplate{long}{#1}
}
\ProvideAcroCommand{\Acladv}{m}{%
  \acroadverb
  \acroupper
  \UseAcroTemplate{long}{#1}%
}
\ProvideAcroCommand{\Iacladv}{m}{%
  \acroadverb
  \acroupper
  \acroindefinite
  \UseAcroTemplate{long}{#1}%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% And that's the end of the |adx| style implementation.
%    \begin{macrocode}
%</adx>
%    \end{macrocode}
%\Finale
